{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "acc",
          "type": "address"
        }
      ],
      "name": "getFaucet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604080518082018252600981526815195cdd081554d11560ba1b6020808301918252835180850190945260068452651d0b9554d11560d21b90840152815191929162000061916003916200015e565b508051620000779060049060208401906200015e565b5050506200009233655a0a3bd530006200009860201b60201c565b62000268565b6001600160a01b038216620000f35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000107919062000204565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b8280546200016c906200022b565b90600052602060002090601f016020900481019282620001905760008555620001db565b82601f10620001ab57805160ff1916838001178555620001db565b82800160010185558215620001db579182015b82811115620001db578251825591602001919060010190620001be565b50620001e9929150620001ed565b5090565b5b80821115620001e95760008155600101620001ee565b600082198211156200022657634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200024057607f821691505b602082108114156200026257634e487b7160e01b600052602260045260246000fd5b50919050565b61096d80620002786000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461014357806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d75780630f25b732146100fa57806318160ddd1461010f57806323b872dd14610121578063313ce56714610134575b600080fd5b6100c16101c0565b6040516100ce9190610881565b60405180910390f35b6100ea6100e5366004610834565b610252565b60405190151581526020016100ce565b61010d61010836600461085e565b61026a565b005b6002545b6040519081526020016100ce565b6100ea61012f3660046107f8565b610278565b604051600681526020016100ce565b6100ea610151366004610834565b61029c565b6101136101643660046107a3565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea610195366004610834565b6102cd565b6100ea6101a8366004610834565b61034d565b6101136101bb3660046107c5565b61035b565b6060600380546101cf906108fc565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108fc565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b61027481836104aa565b5050565b600033610286858285610569565b6102918585856105e3565b506001949350505050565b6000336102608185856102af838361035b565b6102b991906108d6565b610386565b6060600480546101cf906108fc565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102918286868403610386565b6000336102608185856105e3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166105005760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461051291906108d6565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610575848461035b565b905060001981146105dd57818110156105d05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b6105dd8484848403610386565b50505050565b6001600160a01b0383166106475760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166106a95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156107215760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105dd565b80356001600160a01b038116811461079e57600080fd5b919050565b6000602082840312156107b557600080fd5b6107be82610787565b9392505050565b600080604083850312156107d857600080fd5b6107e183610787565b91506107ef60208401610787565b90509250929050565b60008060006060848603121561080d57600080fd5b61081684610787565b925061082460208501610787565b9150604084013590509250925092565b6000806040838503121561084757600080fd5b61085083610787565b946020939093013593505050565b6000806040838503121561087157600080fd5b823591506107ef60208401610787565b600060208083528351808285015260005b818110156108ae57858101830151858201604001528201610892565b818111156108c0576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156108f757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061091057607f821691505b6020821081141561093157634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203d7e8f7a670e763992fe8a4d4143079b5e67213c7bbe042c1fd8e80e594fafdf64736f6c63430008060033",
    "sourceMap": "113:316:11:-:0;;;142:93;;;;;;;;;-1:-1:-1;1976:113:5;;;;;;;;;;;-1:-1:-1;;;1976:113:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:5;;;;2042:13;;1976:113;;;2042:13;;:5;;:13;:::i;:::-;-1:-1:-1;2065:17:5;;;;:7;;:17;;;;;:::i;:::-;;1976:113;;195:33:11::1;201:10;213:14;195:5;;;:33;;:::i;:::-;113:316:::0;;8567:535:5;-1:-1:-1;;;;;8650:21:5;;8642:65;;;;-1:-1:-1;;;8642:65:5;;216:2:14;8642:65:5;;;198:21:14;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8642:65:5;;;;;;;;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:5;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;520:25:14;;;8999:37:5;;493:18:14;8999:37:5;;;;;;;8567:535;;:::o;113:316:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;113:316:11;;;-1:-1:-1;113:316:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:225:14;596:3;627:1;623:6;620:1;617:13;614:2;;;672:10;667:3;663:20;660:1;653:31;707:4;704:1;697:15;735:4;732:1;725:15;614:2;-1:-1:-1;766:9:14;;604:177::o;786:380::-;865:1;861:12;;;;908;;;929:2;;983:4;975:6;971:17;961:27;;929:2;1036;1028:6;1025:14;1005:18;1002:38;999:2;;;1082:10;1077:3;1073:20;1070:1;1063:31;1117:4;1114:1;1107:15;1145:4;1142:1;1135:15;999:2;;841:325;;;:::o;:::-;113:316:11;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461014357806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d75780630f25b732146100fa57806318160ddd1461010f57806323b872dd14610121578063313ce56714610134575b600080fd5b6100c16101c0565b6040516100ce9190610881565b60405180910390f35b6100ea6100e5366004610834565b610252565b60405190151581526020016100ce565b61010d61010836600461085e565b61026a565b005b6002545b6040519081526020016100ce565b6100ea61012f3660046107f8565b610278565b604051600681526020016100ce565b6100ea610151366004610834565b61029c565b6101136101643660046107a3565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea610195366004610834565b6102cd565b6100ea6101a8366004610834565b61034d565b6101136101bb3660046107c5565b61035b565b6060600380546101cf906108fc565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108fc565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b61027481836104aa565b5050565b600033610286858285610569565b6102918585856105e3565b506001949350505050565b6000336102608185856102af838361035b565b6102b991906108d6565b610386565b6060600480546101cf906108fc565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102918286868403610386565b6000336102608185856105e3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166105005760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461051291906108d6565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610575848461035b565b905060001981146105dd57818110156105d05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b6105dd8484848403610386565b50505050565b6001600160a01b0383166106475760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166106a95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156107215760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105dd565b80356001600160a01b038116811461079e57600080fd5b919050565b6000602082840312156107b557600080fd5b6107be82610787565b9392505050565b600080604083850312156107d857600080fd5b6107e183610787565b91506107ef60208401610787565b90509250929050565b60008060006060848603121561080d57600080fd5b61081684610787565b925061082460208501610787565b9150604084013590509250925092565b6000806040838503121561084757600080fd5b61085083610787565b946020939093013593505050565b6000806040838503121561087157600080fd5b823591506107ef60208401610787565b600060208083528351808285015260005b818110156108ae57858101830151858201604001528201610892565b818111156108c0576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156108f757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061091057607f821691505b6020821081141561093157634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203d7e8f7a670e763992fe8a4d4143079b5e67213c7bbe042c1fd8e80e594fafdf64736f6c63430008060033",
    "sourceMap": "113:316:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1664:14:14;;1657:22;1639:41;;1627:2;1612:18;4431:197:5;1594:92:14;337:90:11;;;;;;:::i;:::-;;:::i;:::-;;3242:106:5;3329:12;;3242:106;;;5588:25:14;;;5576:2;5561:18;3242:106:5;5543:76:14;5190:286:5;;;;;;:::i;:::-;;:::i;241:90:11:-;;;323:1;5766:36:14;;5754:2;5739:18;241:90:11;5721:87:14;5871:234:5;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:5;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4089:18:5;;;4063:7;4089:18;;;-1:-1:-1;4089:18:5;;;;;;;;:27;;;;;;;;;;;;;3974:149;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:8;4568:32:5;719:10:8;4584:7:5;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:5;;4431:197;-1:-1:-1;;;4431:197:5:o;337:90:11:-;402:18;408:3;413:6;402:5;:18::i;:::-;337:90;;:::o;5190:286:5:-;5317:4;719:10:8;5373:38:5;5389:4;719:10:8;5404:6:5;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:5;;5190:286;-1:-1:-1;;;;5190:286:5:o;5871:234::-;719:10:8;5959:4:5;4089:18;;;-1:-1:-1;4089:18:5;;;;;;;;-1:-1:-1;;;;;4089:27:5;;;;;;;;;;5959:4;;719:10:8;6013:64:5;;719:10:8;;4089:27:5;;6038:38;;6066:10;;6038:38;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;719:10:8;6685:4:5;4089:18;;;-1:-1:-1;4089:18:5;;;;;;;;-1:-1:-1;;;;;4089:27:5;;;;;;;;;;6685:4;;719:10:8;6829:15:5;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:5;;4878:2:14;6801:85:5;;;4860:21:14;4917:2;4897:18;;;4890:30;4956:34;4936:18;;;4929:62;-1:-1:-1;;;5007:18:14;;;5000:35;5052:19;;6801:85:5;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:8;3860:28:5;719:10:8;3877:2:5;3881:6;3860:9;:28::i;10504:370::-;-1:-1:-1;;;;;10635:19:5;;10627:68;;;;-1:-1:-1;;;10627:68:5;;4473:2:14;10627:68:5;;;4455:21:14;4512:2;4492:18;;;4485:30;4551:34;4531:18;;;4524:62;-1:-1:-1;;;4602:18:14;;;4595:34;4646:19;;10627:68:5;4445:226:14;10627:68:5;-1:-1:-1;;;;;10713:21:5;;10705:68;;;;-1:-1:-1;;;10705:68:5;;2899:2:14;10705:68:5;;;2881:21:14;2938:2;2918:18;;;2911:30;2977:34;2957:18;;;2950:62;-1:-1:-1;;;3028:18:14;;;3021:32;3070:19;;10705:68:5;2871:224:14;10705:68:5;-1:-1:-1;;;;;10784:18:5;;;;;;;-1:-1:-1;10784:18:5;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;5588:25:14;;;10835:32:5;;;;;;;;;;;;10504:370;;;:::o;8567:535::-;-1:-1:-1;;;;;8650:21:5;;8642:65;;;;-1:-1:-1;;;8642:65:5;;5284:2:14;8642:65:5;;;5266:21:14;5323:2;5303:18;;;5296:30;5362:33;5342:18;;;5335:61;5413:18;;8642:65:5;5256:181:14;8642:65:5;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:5;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;5588:25:14;;;8999:37:5;;5561:18:14;8999:37:5;;;;;;;337:90:11;;:::o;11155:441:5:-;-1:-1:-1;;;;;4089:18:5;;;11285:24;4089:18;;;-1:-1:-1;4089:18:5;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11351:37:5;;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:5;;3302:2:14;11404:68:5;;;3284:21:14;3341:2;3321:18;;;3314:30;3380:31;3360:18;;;3353:59;3429:18;;11404:68:5;3274:179:14;11404:68:5;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:5;;7591:68;;;;-1:-1:-1;;;7591:68:5;;4067:2:14;7591:68:5;;;4049:21:14;4106:2;4086:18;;;4079:30;4145:34;4125:18;;;4118:62;-1:-1:-1;;;4196:18:14;;;4189:35;4241:19;;7591:68:5;4039:227:14;7591:68:5;-1:-1:-1;;;;;7677:16:5;;7669:64;;;;-1:-1:-1;;;7669:64:5;;2495:2:14;7669:64:5;;;2477:21:14;2534:2;2514:18;;;2507:30;2573:34;2553:18;;;2546:62;-1:-1:-1;;;2624:18:14;;;2617:33;2667:19;;7669:64:5;2467:225:14;7669:64:5;-1:-1:-1;;;;;7815:15:5;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:5;;3660:2:14;7840:72:5;;;3642:21:14;3699:2;3679:18;;;3672:30;3738:34;3718:18;;;3711:62;-1:-1:-1;;;3789:18:14;;;3782:36;3835:19;;7840:72:5;3632:228:14;7840:72:5;-1:-1:-1;;;;;7946:15:5;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;5588:25:14;;;8210:26:5;;8161:13;;8210:26;;;;;;;;;;;8247:37;12180:121;14:173:14;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:14:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:14:o;1240:254::-;1308:6;1316;1369:2;1357:9;1348:7;1344:23;1340:32;1337:2;;;1385:1;1382;1375:12;1337:2;1421:9;1408:23;1398:33;;1450:38;1484:2;1473:9;1469:18;1450:38;:::i;1691:597::-;1803:4;1832:2;1861;1850:9;1843:21;1893:6;1887:13;1936:6;1931:2;1920:9;1916:18;1909:34;1961:1;1971:140;1985:6;1982:1;1979:13;1971:140;;;2080:14;;;2076:23;;2070:30;2046:17;;;2065:2;2042:26;2035:66;2000:10;;1971:140;;;2129:6;2126:1;2123:13;2120:2;;;2199:1;2194:2;2185:6;2174:9;2170:22;2166:31;2159:42;2120:2;-1:-1:-1;2272:2:14;2251:15;-1:-1:-1;;2247:29:14;2232:45;;;;2279:2;2228:54;;1812:476;-1:-1:-1;;;1812:476:14:o;5813:225::-;5853:3;5884:1;5880:6;5877:1;5874:13;5871:2;;;5929:10;5924:3;5920:20;5917:1;5910:31;5964:4;5961:1;5954:15;5992:4;5989:1;5982:15;5871:2;-1:-1:-1;6023:9:14;;5861:177::o;6043:380::-;6122:1;6118:12;;;;6165;;;6186:2;;6240:4;6232:6;6228:17;6218:27;;6186:2;6293;6285:6;6282:14;6262:18;6259:38;6256:2;;;6339:10;6334:3;6330:20;6327:1;6320:31;6374:4;6371:1;6364:15;6402:4;6399:1;6392:15;6256:2;;6098:325;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getFaucet(uint256,address)": "0f25b732",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"getFaucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/USDT.sol\":\"USDT\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@std/=lib/forge-std/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/USDT.sol\":{\"keccak256\":\"0x1f1f70a63c0f8c23a931af9a06df70b2222ffbe00de4bfc8167ea5443bea9cbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aae3f5adcbdcf04832a6a088e90b2ba4ec707e819e0ef254d4197991e66f7682\",\"dweb:/ipfs/QmTbcddjrUent4ofeWn1PHzDDWBmewjPuFX2NZAmDwG39j\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.6+commit.11564f7e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "acc",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getFaucet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@std/=lib/forge-std/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/USDT.sol": "USDT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/USDT.sol": {
        "keccak256": "0x1f1f70a63c0f8c23a931af9a06df70b2222ffbe00de4bfc8167ea5443bea9cbd",
        "urls": [
          "bzz-raw://aae3f5adcbdcf04832a6a088e90b2ba4ec707e819e0ef254d4197991e66f7682",
          "dweb:/ipfs/QmTbcddjrUent4ofeWn1PHzDDWBmewjPuFX2NZAmDwG39j"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/USDT.sol",
    "id": 18546,
    "exportedSymbols": {
      "Context": [
        18242
      ],
      "ERC20": [
        18117
      ],
      "IERC20": [
        18195
      ],
      "IERC20Metadata": [
        18220
      ],
      "USDT": [
        18545
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:398:11",
    "nodes": [
      {
        "id": 18505,
        "nodeType": "PragmaDirective",
        "src": "32:22:11",
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ]
      },
      {
        "id": 18506,
        "nodeType": "ImportDirective",
        "src": "56:55:11",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18546,
        "sourceUnit": 18118,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 18545,
        "nodeType": "ContractDefinition",
        "src": "113:316:11",
        "nodes": [
          {
            "id": 18522,
            "nodeType": "FunctionDefinition",
            "src": "142:93:11",
            "body": {
              "id": 18521,
              "nodeType": "Block",
              "src": "185:50:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18516,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "201:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 18517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "201:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3939303030303030303030303030",
                        "id": 18518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "213:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99000000000000_by_1",
                          "typeString": "int_const 99000000000000"
                        },
                        "value": "99000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_99000000000000_by_1",
                          "typeString": "int_const 99000000000000"
                        }
                      ],
                      "id": 18515,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17934,
                      "src": "195:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 18519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "195:33:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18520,
                  "nodeType": "ExpressionStatement",
                  "src": "195:33:11"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546573742055534454",
                    "id": 18511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "162:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7e566ba522c244d5505802d09c34d95268802ec3ccf066d308dbafa9bc6ff7fd",
                      "typeString": "literal_string \"Test USDT\""
                    },
                    "value": "Test USDT"
                  },
                  {
                    "hexValue": "742e55534454",
                    "id": 18512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "175:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_39102da7b6ca59ec62f0c1f906a76be7965bbc7f72b25b27a283037d9ef59889",
                      "typeString": "literal_string \"t.USDT\""
                    },
                    "value": "t.USDT"
                  }
                ],
                "id": 18513,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 18510,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18117,
                  "src": "156:5:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "156:28:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 18509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "153:2:11"
            },
            "returnParameters": {
              "id": 18514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "185:0:11"
            },
            "scope": 18545,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18531,
            "nodeType": "FunctionDefinition",
            "src": "241:90:11",
            "body": {
              "id": 18530,
              "nodeType": "Block",
              "src": "306:25:11",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 18528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "323:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 18527,
                  "id": 18529,
                  "nodeType": "Return",
                  "src": "316:8:11"
                }
              ]
            },
            "baseFunctions": [
              17605
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "250:8:11",
            "overrides": {
              "id": 18524,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "281:8:11"
            },
            "parameters": {
              "id": 18523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "258:2:11"
            },
            "returnParameters": {
              "id": 18527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18531,
                  "src": "299:5:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 18525,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:7:11"
            },
            "scope": 18545,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 18544,
            "nodeType": "FunctionDefinition",
            "src": "337:90:11",
            "body": {
              "id": 18543,
              "nodeType": "Block",
              "src": "392:35:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18539,
                        "name": "acc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18535,
                        "src": "408:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18540,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18533,
                        "src": "413:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18538,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17934,
                      "src": "402:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 18541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "402:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18542,
                  "nodeType": "ExpressionStatement",
                  "src": "402:18:11"
                }
              ]
            },
            "functionSelector": "0f25b732",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFaucet",
            "nameLocation": "346:9:11",
            "parameters": {
              "id": 18536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18533,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "364:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 18544,
                  "src": "356:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18535,
                  "mutability": "mutable",
                  "name": "acc",
                  "nameLocation": "380:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 18544,
                  "src": "372:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "355:29:11"
            },
            "returnParameters": {
              "id": 18537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:0:11"
            },
            "scope": 18545,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18507,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18117,
              "src": "130:5:11"
            },
            "id": 18508,
            "nodeType": "InheritanceSpecifier",
            "src": "130:5:11"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          18545,
          18117,
          18220,
          18195,
          18242
        ],
        "name": "USDT",
        "nameLocation": "122:4:11",
        "scope": 18546,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 11
}